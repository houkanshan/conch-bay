# Fix margelo/react-native-quick-sqlite#11, margelo/react-native-quick-sqlite#12 and blobs reading.
diff --git a/node_modules/react-native-quick-sqlite/cpp/JSIHelper.cpp b/node_modules/react-native-quick-sqlite/cpp/JSIHelper.cpp
index ac86be4..d36faa9 100644
--- a/node_modules/react-native-quick-sqlite/cpp/JSIHelper.cpp
+++ b/node_modules/react-native-quick-sqlite/cpp/JSIHelper.cpp
@@ -169,12 +169,11 @@ jsi::Value createSequelQueryExecutionResult(jsi::Runtime &rt, SQLiteOPResult sta
         }
         else if (value.dataType == ARRAY_BUFFER)
         {
-          jsi::Function array_buffer_ctor = rt.global().getPropertyAsFunction(rt, "ArrayBuffer");
-          jsi::Object o = array_buffer_ctor.callAsConstructor(rt, (int)value.arrayBufferSize).getObject(rt);
-          jsi::ArrayBuffer buf = o.getArrayBuffer(rt);
-          // It's a shame we have to copy here: see https://github.com/facebook/hermes/pull/419 and https://github.com/facebook/hermes/issues/564.
-          memcpy(buf.data(rt), value.arrayBufferValue.get(), value.arrayBufferSize);
-          rowObject.setProperty(rt, columnName.c_str(), o);
+          jsi::Array array = jsi::Array(rt, value.arrayBufferSize);
+          for (size_t j = 0; j < value.arrayBufferSize; j++) {
+            array.setValueAtIndex(rt, j, jsi::Value(static_cast<double>(value.arrayBufferValue.get()[j])));
+          }
+          rowObject.setProperty(rt, columnName.c_str(), array);
         }
         else
         {
diff --git a/node_modules/react-native-quick-sqlite/cpp/sqliteBridge.cpp b/node_modules/react-native-quick-sqlite/cpp/sqliteBridge.cpp
index 484517e..58d6646 100644
--- a/node_modules/react-native-quick-sqlite/cpp/sqliteBridge.cpp
+++ b/node_modules/react-native-quick-sqlite/cpp/sqliteBridge.cpp
@@ -337,7 +337,7 @@ SQLiteOPResult sqliteExecute(string const dbName, string const &query, vector<Qu
             {
               int blob_size = sqlite3_column_bytes(statement, i);
               const void *blob = sqlite3_column_blob(statement, i);
-              uint8_t *data;
+              uint8_t *data = new uint8_t[blob_size];
               memcpy(data, blob, blob_size);
               row[column_name] = createArrayBufferQuickValue(data, blob_size);
               break;
diff --git a/node_modules/react-native-quick-sqlite/react-native-quick-sqlite.podspec b/node_modules/react-native-quick-sqlite/react-native-quick-sqlite.podspec
index 2ea7b1d..8aeb264 100644
--- a/node_modules/react-native-quick-sqlite/react-native-quick-sqlite.podspec
+++ b/node_modules/react-native-quick-sqlite/react-native-quick-sqlite.podspec
@@ -26,9 +26,7 @@ Pod::Spec.new do |s|
   s.dependency "React"
   s.dependency "React-Core"
 
-  if ENV['QUICK_SQLITE_USE_PHONE_VERSION'] == '1' then
-    s.exclude_files = "cpp/sqlite3.c", "cpp/sqlite3.h"
-    s.library = "sqlite3"
-  end
+  s.exclude_files = "cpp/sqlite3.c", "cpp/sqlite3.h"
+  s.library = "sqlite3"
 
 end
